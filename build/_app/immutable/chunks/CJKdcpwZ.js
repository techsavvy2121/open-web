import{e as c}from"./0WLtkgvg.js";import{g as h}from"./CXA2wbo1.js";const p=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:o})}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},d=async(e,o,a,n,t)=>{let r=null;const s=await fetch(`${c}/chats/import`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",authorization:`Bearer ${e}`},body:JSON.stringify({chat:o,meta:a??{},pinned:n,folder_id:t})}).then(async i=>{if(!i.ok)throw await i.json();return i.json()}).catch(i=>(r=i,console.error(i),null));if(r)throw r;return s},w=async(e="",o=null)=>{let a=null;const n=new URLSearchParams;o!==null&&n.append("page",`${o}`);const t=await fetch(`${c}/chats/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(a=r,console.error(r),null));if(a)throw a;return t.map(r=>({...r,time_range:h(r.updated_at)}))},y=async(e="",o)=>{let a=null;const n=await fetch(`${c}/chats/list/user/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n.map(t=>({...t,time_range:h(t.updated_at)}))},j=async(e="")=>{let o=null;const a=await fetch(`${c}/chats/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},f=async e=>{let o=null;const a=await fetch(`${c}/chats/all`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},$=async(e,o,a=1)=>{let n=null;const t=new URLSearchParams;t.append("text",o),t.append("page",`${a}`);const r=await fetch(`${c}/chats/search?${t.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).then(s=>s).catch(s=>(n=s,console.error(s),null));if(n)throw n;return r.map(s=>({...s,time_range:h(s.updated_at)}))},T=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/folder/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},C=async e=>{let o=null;const a=await fetch(`${c}/chats/all/archived`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},m=async e=>{let o=null;const a=await fetch(`${c}/chats/all/db`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},B=async e=>{let o=null;const a=await fetch(`${c}/chats/all/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a},g=async(e="")=>{let o=null;const a=await fetch(`${c}/chats/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n,console.error(n),null));if(o)throw o;return a.map(n=>({...n,time_range:h(n.updated_at)}))},A=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},z=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/share/${o}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},S=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/pinned`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},E=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/pin`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},I=async(e,o,a)=>{let n=null;const t=await fetch(`${c}/chats/${o}/clone`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({...a&&{title:a}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,"detail"in r?n=r.detail:n=r,console.error(r),null));if(n)throw n;return t},P=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/clone/shared`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,"detail"in t?a=t.detail:a=t,console.error(t),null));if(a)throw a;return n},O=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/share`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},G=async(e,o,a)=>{let n=null;const t=await fetch(`${c}/chats/${o}/folder`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({folder_id:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},_=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/archive`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},L=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/share`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},b=async(e,o,a)=>{let n=null;const t=await fetch(`${c}/chats/${o}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({chat:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},v=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t.detail,console.error(t),null));if(a)throw a;return n},N=async(e,o)=>{let a=null;const n=await fetch(`${c}/chats/${o}/tags`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).then(t=>t).catch(t=>(a=t,console.error(t),null));if(a)throw a;return n},J=async(e,o,a)=>{let n=null;const t=await fetch(`${c}/chats/${o}/tags`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r.detail,console.error(r),null));if(n)throw n;return t},U=async(e,o,a)=>{let n=null;const t=await fetch(`${c}/chats/${o}/tags`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({name:a})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).then(r=>r).catch(r=>(n=r,console.error(r),null));if(n)throw n;return t},x=async e=>{let o=null;const a=await fetch(`${c}/chats/`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.error(n),null));if(o)throw o;return a},D=async e=>{let o=null;const a=await fetch(`${c}/chats/archive/all`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).then(n=>n).catch(n=>(o=n.detail,console.error(n),null));if(o)throw o;return a};export{D as A,x as B,p as C,N as a,J as b,P as c,B as d,U as e,A as f,z as g,L as h,w as i,y as j,v as k,m as l,j as m,_ as n,C as o,S as p,g as q,I as r,O as s,E as t,b as u,T as v,d as w,G as x,$ as y,f as z};
//# sourceMappingURL=CJKdcpwZ.js.map
